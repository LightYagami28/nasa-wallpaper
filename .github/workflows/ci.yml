name: CI
on: [push, pull_request]
env:
  CRATE_NAME: nasa-wallpaper
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  test:
    name: ${{ matrix.platform.os_name }} with Rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: nasa-wallpaper
            archive_name: nasa-wallpaper-Linux-x86_64-gnu.tar.gz
            skip_tests: true
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: nasa-wallpaper
            archive_name: nasa-wallpaper-Darwin-x86_64.tar.gz
            skip_tests: true
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: nasa-wallpaper.exe
            archive_name: nasa-wallpaper-Windows-x86_64.zip
            skip_tests: true
        toolchain:
          - stable

    steps:
      - uses: actions/checkout@v4

      # Cache cargo & target directories with Cargo.lock hash
      - name: Cache cargo & target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Configure Git
        run: |
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "CI Bot"

      - name: Install musl-tools on Linux
        if: startsWith(matrix.platform.os_name, 'Linux')
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: --locked --release
          strip: true

      - name: Run tests
        if: ${{ !matrix.platform.skip_tests }}
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: test
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: --locked --release

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.archive_name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.archive_name }} ${{ matrix.platform.bin }}
          fi
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.archive_name }}
          path: ${{ matrix.platform.archive_name }}

      - name: Generate SHA-256
        if: startsWith(github.ref, 'refs/tags/v')
        run: shasum -a 256 ${{ matrix.platform.archive_name }}

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: ${{ matrix.platform.archive_name }}
