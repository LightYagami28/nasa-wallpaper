name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CRATE_NAME: nasa-wallpaper
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build-and-release:
    name: ${{ matrix.platform.os_name }} | Rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Linux-x86_64.tar.gz
            skip_tests: true
          - os_name: Linux-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Linux-aarch64.tar.gz
            skip_tests: true
          - os_name: Linux-arm
            os: ubuntu-22.04
            target: arm-unknown-linux-gnueabi
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Linux-arm.tar.gz
            skip_tests: true
          - os_name: Linux-i686
            os: ubuntu-22.04
            target: i686-unknown-linux-gnu
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Linux-i686.tar.gz
            skip_tests: true
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: nasa-wallpaper.exe
            archive: nasa-wallpaper-Windows-x86_64.zip
            skip_tests: true
          - os_name: Windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            bin: nasa-wallpaper.exe
            archive: nasa-wallpaper-Windows-i686.zip
            skip_tests: true
          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: nasa-wallpaper.exe
            archive: nasa-wallpaper-Windows-aarch64.zip
            skip_tests: true
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Darwin-x86_64.tar.gz
            skip_tests: true
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Darwin-aarch64.tar.gz
            skip_tests: true
        toolchain:
          - stable

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo registry & target
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"

      - name: Configure Git
        run: |
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Bot"

      - name: Install musl-tools (Linux)
        if: startsWith(matrix.platform.os, 'ubuntu')
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true

      - name: Run tests
        if: ${{ !matrix.platform.skip_tests }}
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "test"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"

      - name: Package binary
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.archive }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.archive }} ${{ matrix.platform.bin }}
          fi
          cd -

      - name: Generate SHA-256
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          shasum -a 256 ${{ matrix.platform.archive }} > ${{ matrix.platform.archive }}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.archive }}
          path: ${{ matrix.platform.archive }}

      - name: Generate release notes
        if: startsWith(github.ref, 'refs/tags/v')
        id: release_notes
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          PREV_TAG=$(git describe --tags --abbrev=0 $TAG^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%an)")
          else
            COMMITS=$(git log $PREV_TAG..$TAG --pretty=format:"- %s (%an)")
          fi
          echo "release_body<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: ${{ matrix.platform.archive }}
          body: ${{ env.release_body }}
