name: Rust CI/CD Enterprise

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  CRATE_NAME: nasa-wallpaper
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os_name: Linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Linux-x86_64.tar.gz
          - os_name: Linux-aarch64
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Linux-aarch64.tar.gz
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: nasa-wallpaper.exe
            archive: nasa-wallpaper-Windows-x86_64.zip
          - os_name: macOS-x86_64
            os: macos-14
            target: x86_64-apple-darwin
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Darwin-x86_64.tar.gz
          - os_name: macOS-aarch64
            os: macos-14
            target: aarch64-apple-darwin
            bin: nasa-wallpaper
            archive: nasa-wallpaper-Darwin-aarch64.tar.gz
        toolchain: [stable]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            target
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-cache-${{ matrix.target }}-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-cache-${{ matrix.target }}-${{ matrix.toolchain }}-
            cargo-cache-${{ matrix.target }}-
            cargo-cache-

      - name: Install dependencies (Linux only)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install -y musl-tools p7zip-full

      - name: Build release
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          args: --locked --release
          strip: true

      - name: Run tests
        uses: houseabsolute/actions-rust-cross@v0
        if: matrix.toolchain == 'stable'
        with:
          command: test
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
          args: --locked --release

      - name: Package binaries
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.archive }} ${{ matrix.bin }}
          else
            tar czvf ../../../${{ matrix.archive }} ${{ matrix.bin }}
          fi
          cd -

      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.archive }} > ${{ matrix.archive }}.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive }}
          path: |
            ${{ matrix.archive }}
            ${{ matrix.archive }}.sha256

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release
      - name: Publish GitHub Release (draft)
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: release/**
